{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl500\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TIME COMPLEXITY :\
In the bubble sort algorithm we perform n - 1 checks then n - 2 then n - 3 and so on\'85 
\f1 \

\f0 Which results in a sum : (n(n-1))/2 = (n^2- n)/2
\f1 \

\f0 We can omit the n and the \'bd factor which leaves us with \uc0\u920 (n^2)
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl500\partightenfactor0

\f0 \cf2 In the best case the algorithm runs on a sorted algorithm which means that it\'92ll iterate n times for the first check. Therefore \uc0\u937 (n) 
\f1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl440\partightenfactor0

\f0 \cf2 The worst case is also similar to the average case since the algorithm iterates through all the elements n-1 times. So the worst case time-complexity is O(n)	}